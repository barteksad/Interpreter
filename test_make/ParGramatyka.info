-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from ParGramatyka.y
-----------------------------------------------------------------------------

state 114 contains 1 shift/reduce conflicts.

rule 36 is unused
rule 37 is unused
rule 38 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Stmt -> Type ListItem ';'                          (5)
	Stmt -> Type Ident '(' ListArg ')' FBlock          (6)
	Stmt -> ';'                                        (7)
	Stmt -> Block                                      (8)
	Stmt -> Ident '=' Expr ';'                         (9)
	Stmt -> Ident '++' ';'                             (10)
	Stmt -> Ident '--' ';'                             (11)
	Stmt -> 'if' '(' Expr ')' Stmt                     (12)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (13)
	Stmt -> 'while' '(' Expr ')' Stmt                  (14)
	Stmt -> Expr ';'                                   (15)
	Arg -> Type Ident                                  (16)
	Arg -> 'ref' Type Ident                            (17)
	Ret -> 'return' Expr ';'                           (18)
	ListArg ->                                         (19)
	ListArg -> Arg                                     (20)
	ListArg -> Arg ',' ListArg                         (21)
	FBlock -> '{' ListStmt Ret '}'                     (22)
	Block -> '{' ListStmt '}'                          (23)
	ListStmt ->                                        (24)
	ListStmt -> Stmt ListStmt                          (25)
	Item -> Ident                                      (26)
	Item -> Ident '=' Expr                             (27)
	ListItem -> Item                                   (28)
	ListItem -> Item ',' ListItem                      (29)
	Type -> 'int'                                      (30)
	Type -> 'string'                                   (31)
	Type -> 'bool'                                     (32)
	Type -> Type '(' ListAType ')'                     (33)
	AType -> Type                                      (34)
	AType -> 'ref' Type                                (35)
	ListType ->                                        (36)
	ListType -> Type                                   (37)
	ListType -> Type ',' ListType                      (38)
	ListAType ->                                       (39)
	ListAType -> AType                                 (40)
	ListAType -> AType ',' ListAType                   (41)
	Expr6 -> '(' ListArg ')' '=>' Type FBlock          (42)
	Expr6 -> Ident                                     (43)
	Expr6 -> Integer                                   (44)
	Expr6 -> 'true'                                    (45)
	Expr6 -> 'false'                                   (46)
	Expr6 -> Ident '(' ListExpr ')'                    (47)
	Expr6 -> String                                    (48)
	Expr6 -> '(' Expr ')'                              (49)
	Expr5 -> '-' Expr6                                 (50)
	Expr5 -> '!' Expr6                                 (51)
	Expr5 -> Expr6                                     (52)
	Expr4 -> Expr4 MulOp Expr5                         (53)
	Expr4 -> Expr5                                     (54)
	Expr3 -> Expr3 AddOp Expr4                         (55)
	Expr3 -> Expr4                                     (56)
	Expr2 -> Expr2 RelOp Expr3                         (57)
	Expr2 -> Expr3                                     (58)
	Expr1 -> Expr2 '&&' Expr1                          (59)
	Expr1 -> Expr2                                     (60)
	Expr -> Expr1 '||' Expr                            (61)
	Expr -> Expr1                                      (62)
	ListExpr ->                                        (63)
	ListExpr -> Expr                                   (64)
	ListExpr -> Expr ',' ListExpr                      (65)
	AddOp -> '+'                                       (66)
	AddOp -> '-'                                       (67)
	MulOp -> '*'                                       (68)
	MulOp -> '/'                                       (69)
	MulOp -> '%'                                       (70)
	RelOp -> '<'                                       (71)
	RelOp -> '<='                                      (72)
	RelOp -> '>'                                       (73)
	RelOp -> '>='                                      (74)
	RelOp -> '=='                                      (75)
	RelOp -> '!='                                      (76)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'=>'           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'ref'          { PT _ (TS _ 27) }
	'return'       { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'while'        { PT _ (TS _ 31) }
	'{'            { PT _ (TS _ 32) }
	'||'           { PT _ (TS _ 33) }
	'}'            { PT _ (TS _ 34) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Stmt            rules 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	Arg             rules 16, 17
	Ret             rule  18
	ListArg         rules 19, 20, 21
	FBlock          rule  22
	Block           rule  23
	ListStmt        rules 24, 25
	Item            rules 26, 27
	ListItem        rules 28, 29
	Type            rules 30, 31, 32, 33
	AType           rules 34, 35
	ListType        rules 36, 37, 38
	ListAType       rules 39, 40, 41
	Expr6           rules 42, 43, 44, 45, 46, 47, 48, 49
	Expr5           rules 50, 51, 52
	Expr4           rules 53, 54
	Expr3           rules 55, 56
	Expr2           rules 57, 58
	Expr1           rules 59, 60
	Expr            rules 61, 62
	ListExpr        rules 63, 64, 65
	AddOp           rules 66, 67
	MulOp           rules 68, 69, 70
	RelOp           rules 71, 72, 73, 74, 75, 76

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31
	%eof           reduce using rule 24

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 9
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt -> Ident . '=' Expr ';'                        (rule 9)
	Stmt -> Ident . '++' ';'                            (rule 10)
	Stmt -> Ident . '--' ';'                            (rule 11)
	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 65
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           shift, and enter state 66
	'-'            reduce using rule 43
	'--'           shift, and enter state 67
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            shift, and enter state 68
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 4

	Expr6 -> Integer .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 5

	Expr6 -> String .                                   (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	ListStmt -> Stmt . ListStmt                         (rule 25)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       reduce using rule 24
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	'}'            reduce using rule 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31
	%eof           reduce using rule 24

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 64
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 8

	Stmt -> Block .                                     (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'bool'         reduce using rule 8
	'else'         reduce using rule 8
	'false'        reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'return'       reduce using rule 8
	'string'       reduce using rule 8
	'true'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 9

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 10

	Stmt -> Type . ListItem ';'                         (rule 5)
	Stmt -> Type . Ident '(' ListArg ')' FBlock         (rule 6)
	Type -> Type . '(' ListAType ')'                    (rule 33)

	'('            shift, and enter state 63
	L_Ident        shift, and enter state 2

	Ident          goto state 60
	Item           goto state 61
	ListItem       goto state 62

State 11

	Expr5 -> Expr6 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 12

	Expr4 -> Expr5 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 13

	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)
	Expr3 -> Expr4 .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 57
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 58
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 59
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 56

State 14

	Expr3 -> Expr3 . AddOp Expr4                        (rule 55)
	Expr2 -> Expr3 .                                    (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 54
	','            reduce using rule 58
	'-'            shift, and enter state 55
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 53

State 15

	Expr2 -> Expr2 . RelOp Expr3                        (rule 57)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 59)
	Expr1 -> Expr2 .                                    (rule 60)

	'!='           shift, and enter state 46
	'&&'           shift, and enter state 47
	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'<'            shift, and enter state 48
	'<='           shift, and enter state 49
	'=='           shift, and enter state 50
	'>'            shift, and enter state 51
	'>='           shift, and enter state 52
	'||'           reduce using rule 60

	RelOp          goto state 45

State 16

	Expr -> Expr1 . '||' Expr                           (rule 61)
	Expr -> Expr1 .                                     (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62
	'||'           shift, and enter state 44


State 17

	Stmt -> Expr . ';'                                  (rule 15)

	';'            shift, and enter state 43


State 18

	Expr5 -> '!' . Expr6                                (rule 51)

	'('            shift, and enter state 19
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 42

State 19

	Expr6 -> '(' . ListArg ')' '=>' Type FBlock         (rule 42)
	Expr6 -> '(' . Expr ')'                             (rule 49)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	')'            reduce using rule 19
	'-'            shift, and enter state 20
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'int'          shift, and enter state 25
	'ref'          shift, and enter state 41
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Arg            goto state 37
	ListArg        goto state 38
	Type           goto state 39
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 40

State 20

	Expr5 -> '-' . Expr6                                (rule 50)

	'('            shift, and enter state 19
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 36

State 21

	Stmt -> ';' .                                       (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'bool'         reduce using rule 7
	'else'         reduce using rule 7
	'false'        reduce using rule 7
	'if'           reduce using rule 7
	'int'          reduce using rule 7
	'return'       reduce using rule 7
	'string'       reduce using rule 7
	'true'         reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 22

	Type -> 'bool' .                                    (rule 32)

	'('            reduce using rule 32
	')'            reduce using rule 32
	','            reduce using rule 32
	'{'            reduce using rule 32
	L_Ident        reduce using rule 32


State 23

	Expr6 -> 'false' .                                  (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 24

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 12)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 13)

	'('            shift, and enter state 34


State 25

	Type -> 'int' .                                     (rule 30)

	'('            reduce using rule 30
	')'            reduce using rule 30
	','            reduce using rule 30
	'{'            reduce using rule 30
	L_Ident        reduce using rule 30


State 26

	Type -> 'string' .                                  (rule 31)

	'('            reduce using rule 31
	')'            reduce using rule 31
	','            reduce using rule 31
	'{'            reduce using rule 31
	L_Ident        reduce using rule 31


State 27

	Expr6 -> 'true' .                                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 28

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 14)

	'('            shift, and enter state 33


State 29

	Block -> '{' . ListStmt '}'                         (rule 23)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	'}'            reduce using rule 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 32
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 30

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 31

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 32

	Block -> '{' ListStmt . '}'                         (rule 23)

	'}'            shift, and enter state 94


State 33

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 14)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 93

State 34

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 12)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 13)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 92

State 35

	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 65
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 36

	Expr5 -> '-' Expr6 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 37

	ListArg -> Arg .                                    (rule 20)
	ListArg -> Arg . ',' ListArg                        (rule 21)

	')'            reduce using rule 20
	','            shift, and enter state 91


State 38

	Expr6 -> '(' ListArg . ')' '=>' Type FBlock         (rule 42)

	')'            shift, and enter state 90


State 39

	Arg -> Type . Ident                                 (rule 16)
	Type -> Type . '(' ListAType ')'                    (rule 33)

	'('            shift, and enter state 63
	L_Ident        shift, and enter state 2

	Ident          goto state 89

State 40

	Expr6 -> '(' Expr . ')'                             (rule 49)

	')'            shift, and enter state 88


State 41

	Arg -> 'ref' . Type Ident                           (rule 17)

	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26

	Type           goto state 87

State 42

	Expr5 -> '!' Expr6 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 43

	Stmt -> Expr ';' .                                  (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 44

	Expr -> Expr1 '||' . Expr                           (rule 61)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 86

State 45

	Expr2 -> Expr2 RelOp . Expr3                        (rule 57)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 85

State 46

	RelOp -> '!=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 47

	Expr1 -> Expr2 '&&' . Expr1                         (rule 59)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 84

State 48

	RelOp -> '<' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 49

	RelOp -> '<=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 50

	RelOp -> '==' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 51

	RelOp -> '>' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 52

	RelOp -> '>=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 53

	Expr3 -> Expr3 AddOp . Expr4                        (rule 55)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 83

State 54

	AddOp -> '+' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 55

	AddOp -> '-' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 56

	Expr4 -> Expr4 MulOp . Expr5                        (rule 53)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 82

State 57

	MulOp -> '%' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 58

	MulOp -> '*' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 59

	MulOp -> '/' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 60

	Stmt -> Type Ident . '(' ListArg ')' FBlock         (rule 6)
	Item -> Ident .                                     (rule 26)
	Item -> Ident . '=' Expr                            (rule 27)

	'('            shift, and enter state 80
	','            reduce using rule 26
	';'            reduce using rule 26
	'='            shift, and enter state 81


State 61

	ListItem -> Item .                                  (rule 28)
	ListItem -> Item . ',' ListItem                     (rule 29)

	','            shift, and enter state 79
	';'            reduce using rule 28


State 62

	Stmt -> Type ListItem . ';'                         (rule 5)

	';'            shift, and enter state 78


State 63

	Type -> Type '(' . ListAType ')'                    (rule 33)

	')'            reduce using rule 39
	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'ref'          shift, and enter state 77
	'string'       shift, and enter state 26

	Type           goto state 74
	AType          goto state 75
	ListAType      goto state 76

State 64

	ListStmt -> Stmt ListStmt .                         (rule 25)

	'return'       reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 65

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 47)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	')'            reduce using rule 63
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 72
	ListExpr       goto state 73

State 66

	Stmt -> Ident '++' . ';'                            (rule 10)

	';'            shift, and enter state 71


State 67

	Stmt -> Ident '--' . ';'                            (rule 11)

	';'            shift, and enter state 70


State 68

	Stmt -> Ident '=' . Expr ';'                        (rule 9)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 69

State 69

	Stmt -> Ident '=' Expr . ';'                        (rule 9)

	';'            shift, and enter state 109


State 70

	Stmt -> Ident '--' ';' .                            (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	';'            reduce using rule 11
	'bool'         reduce using rule 11
	'else'         reduce using rule 11
	'false'        reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'return'       reduce using rule 11
	'string'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 71

	Stmt -> Ident '++' ';' .                            (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	';'            reduce using rule 10
	'bool'         reduce using rule 10
	'else'         reduce using rule 10
	'false'        reduce using rule 10
	'if'           reduce using rule 10
	'int'          reduce using rule 10
	'return'       reduce using rule 10
	'string'       reduce using rule 10
	'true'         reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 72

	ListExpr -> Expr .                                  (rule 64)
	ListExpr -> Expr . ',' ListExpr                     (rule 65)

	')'            reduce using rule 64
	','            shift, and enter state 108


State 73

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 47)

	')'            shift, and enter state 107


State 74

	Type -> Type . '(' ListAType ')'                    (rule 33)
	AType -> Type .                                     (rule 34)

	'('            shift, and enter state 63
	')'            reduce using rule 34
	','            reduce using rule 34


State 75

	ListAType -> AType .                                (rule 40)
	ListAType -> AType . ',' ListAType                  (rule 41)

	')'            reduce using rule 40
	','            shift, and enter state 106


State 76

	Type -> Type '(' ListAType . ')'                    (rule 33)

	')'            shift, and enter state 105


State 77

	AType -> 'ref' . Type                               (rule 35)

	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26

	Type           goto state 104

State 78

	Stmt -> Type ListItem ';' .                         (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'bool'         reduce using rule 5
	'else'         reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 79

	ListItem -> Item ',' . ListItem                     (rule 29)

	L_Ident        shift, and enter state 2

	Ident          goto state 102
	Item           goto state 61
	ListItem       goto state 103

State 80

	Stmt -> Type Ident '(' . ListArg ')' FBlock         (rule 6)

	')'            reduce using rule 19
	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'ref'          shift, and enter state 41
	'string'       shift, and enter state 26

	Arg            goto state 37
	ListArg        goto state 101
	Type           goto state 39

State 81

	Item -> Ident '=' . Expr                            (rule 27)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 100

State 82

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 83

	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 57
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 58
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 59
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 56

State 84

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           reduce using rule 59


State 85

	Expr3 -> Expr3 . AddOp Expr4                        (rule 55)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 54
	','            reduce using rule 57
	'-'            shift, and enter state 55
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	AddOp          goto state 53

State 86

	Expr -> Expr1 '||' Expr .                           (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61


State 87

	Arg -> 'ref' Type . Ident                           (rule 17)
	Type -> Type . '(' ListAType ')'                    (rule 33)

	'('            shift, and enter state 63
	L_Ident        shift, and enter state 2

	Ident          goto state 99

State 88

	Expr6 -> '(' Expr ')' .                             (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 89

	Arg -> Type Ident .                                 (rule 16)

	')'            reduce using rule 16
	','            reduce using rule 16


State 90

	Expr6 -> '(' ListArg ')' . '=>' Type FBlock         (rule 42)

	'=>'           shift, and enter state 98


State 91

	ListArg -> Arg ',' . ListArg                        (rule 21)

	')'            reduce using rule 19
	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'ref'          shift, and enter state 41
	'string'       shift, and enter state 26

	Arg            goto state 37
	ListArg        goto state 97
	Type           goto state 39

State 92

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 12)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 13)

	')'            shift, and enter state 96


State 93

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 14)

	')'            shift, and enter state 95


State 94

	Block -> '{' ListStmt '}' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	%eof           reduce using rule 23


State 95

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 14)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 115
	Block          goto state 8
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 96

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 12)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 13)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 114
	Block          goto state 8
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 97

	ListArg -> Arg ',' ListArg .                        (rule 21)

	')'            reduce using rule 21


State 98

	Expr6 -> '(' ListArg ')' '=>' . Type FBlock         (rule 42)

	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26

	Type           goto state 113

State 99

	Arg -> 'ref' Type Ident .                           (rule 17)

	')'            reduce using rule 17
	','            reduce using rule 17


State 100

	Item -> Ident '=' Expr .                            (rule 27)

	','            reduce using rule 27
	';'            reduce using rule 27


State 101

	Stmt -> Type Ident '(' ListArg . ')' FBlock         (rule 6)

	')'            shift, and enter state 112


State 102

	Item -> Ident .                                     (rule 26)
	Item -> Ident . '=' Expr                            (rule 27)

	','            reduce using rule 26
	';'            reduce using rule 26
	'='            shift, and enter state 81


State 103

	ListItem -> Item ',' ListItem .                     (rule 29)

	';'            reduce using rule 29


State 104

	Type -> Type . '(' ListAType ')'                    (rule 33)
	AType -> 'ref' Type .                               (rule 35)

	'('            shift, and enter state 63
	')'            reduce using rule 35
	','            reduce using rule 35


State 105

	Type -> Type '(' ListAType ')' .                    (rule 33)

	'('            reduce using rule 33
	')'            reduce using rule 33
	','            reduce using rule 33
	'{'            reduce using rule 33
	L_Ident        reduce using rule 33


State 106

	ListAType -> AType ',' . ListAType                  (rule 41)

	')'            reduce using rule 39
	'bool'         shift, and enter state 22
	'int'          shift, and enter state 25
	'ref'          shift, and enter state 77
	'string'       shift, and enter state 26

	Type           goto state 74
	AType          goto state 75
	ListAType      goto state 111

State 107

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 108

	ListExpr -> Expr ',' . ListExpr                     (rule 65)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	')'            reduce using rule 63
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 72
	ListExpr       goto state 110

State 109

	Stmt -> Ident '=' Expr ';' .                        (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'bool'         reduce using rule 9
	'else'         reduce using rule 9
	'false'        reduce using rule 9
	'if'           reduce using rule 9
	'int'          reduce using rule 9
	'return'       reduce using rule 9
	'string'       reduce using rule 9
	'true'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 110

	ListExpr -> Expr ',' ListExpr .                     (rule 65)

	')'            reduce using rule 65


State 111

	ListAType -> AType ',' ListAType .                  (rule 41)

	')'            reduce using rule 41


State 112

	Stmt -> Type Ident '(' ListArg ')' . FBlock         (rule 6)

	'{'            shift, and enter state 118

	FBlock         goto state 119

State 113

	Type -> Type . '(' ListAType ')'                    (rule 33)
	Expr6 -> '(' ListArg ')' '=>' Type . FBlock         (rule 42)

	'('            shift, and enter state 63
	'{'            shift, and enter state 118

	FBlock         goto state 117

State 114

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 12)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 13)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'bool'         reduce using rule 12
	'else'         shift, and enter state 116
			(reduce using rule 12)

	'false'        reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 115

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'bool'         reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 116

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 13)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 121
	Block          goto state 8
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 117

	Expr6 -> '(' ListArg ')' '=>' Type FBlock .         (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 118

	FBlock -> '{' . ListStmt Ret '}'                    (rule 22)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	';'            shift, and enter state 21
	'bool'         shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       reduce using rule 24
	'string'       shift, and enter state 26
	'true'         shift, and enter state 27
	'while'        shift, and enter state 28
	'{'            shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Stmt           goto state 7
	Block          goto state 8
	ListStmt       goto state 120
	Type           goto state 10
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 17

State 119

	Stmt -> Type Ident '(' ListArg ')' FBlock .         (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'bool'         reduce using rule 6
	'else'         reduce using rule 6
	'false'        reduce using rule 6
	'if'           reduce using rule 6
	'int'          reduce using rule 6
	'return'       reduce using rule 6
	'string'       reduce using rule 6
	'true'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 120

	FBlock -> '{' ListStmt . Ret '}'                    (rule 22)

	'return'       shift, and enter state 123

	Ret            goto state 122

State 121

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'bool'         reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 122

	FBlock -> '{' ListStmt Ret . '}'                    (rule 22)

	'}'            shift, and enter state 125


State 123

	Ret -> 'return' . Expr ';'                          (rule 18)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	'-'            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 27
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 11
	Expr5          goto state 12
	Expr4          goto state 13
	Expr3          goto state 14
	Expr2          goto state 15
	Expr1          goto state 16
	Expr           goto state 124

State 124

	Ret -> 'return' Expr . ';'                          (rule 18)

	';'            shift, and enter state 126


State 125

	FBlock -> '{' ListStmt Ret '}' .                    (rule 22)

	'!'            reduce using rule 22
	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'bool'         reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	%eof           reduce using rule 22


State 126

	Ret -> 'return' Expr ';' .                          (rule 18)

	'}'            reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 77
Number of terminals: 37
Number of non-terminals: 29
Number of states: 127
